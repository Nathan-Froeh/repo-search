{"version":3,"sources":["helpers/apiCalls.js","helpers/objects.js","Search/Search.jsx","RepoListItem/RepoListItem.jsx","RepoDetail/RepoDetail.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["axios","require","sortOptions","name","value","order","languages","Search","props","useState","searchValue","setSearchValue","sortValue","setSortValue","sortOrder","setSortOrder","languageValue","setLanguageValue","className","onSubmit","event","preventDefault","params","searchParams","q","sort","get","then","githubResults","onError","data","items","catch","error","response","message","console","type","autoFocus","placeholder","onChange","e","target","htmlFor","id","option","JSON","parse","handleSort","map","stringify","RepoListItem","repo","selectRepo","language","split","onClick","full_name","stargazers_count","DateTime","fromJSDate","Date","updated_at","toRelative","description","RepoDetail","history","useHistory","goBack","push","App","reposToRender","selectedRepo","setSelectedRepo","undefined","searchResults","setSearchResults","setError","path","exact","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.3a0ab89e.chunk.js","sourcesContent":["const axios = require(\"axios\");\n\nconst baseUrl = \"https://api.github.com\"\n\nexport function search(params) {\n  return axios.get(`${baseUrl}/search/repositories`, {params: params});\n}\n","\n// Data that would likely come from an API call\n\nexport const sortOptions = [\n  {name: \"Best Match\", value: \"best_match\", order: \"desc\"},\n  {name: \"Most Stars\", value: \"stars\", order: \"desc\"},\n  {name: \"Fewest Stars\", value: \"stars\", order: \"asc\"},\n  {name: \"Most Forks\", value: \"forks\", order: \"desc\"},\n  {name: \"Fewest Forks\", value: \"forks\", order: \"asc\"},\n  {name: \"Recently Updated\", value: \"updated\", order: \"desc\"},\n  {name: \"Least Recently Updated\", value: \"updated\", order: \"asc\"}\n];\n\n\nexport const languages = [\n  {name: \"Python\", value: \"Python\"},\n  {name: \"JavaScript\", value: \"JavaScript\"},\n  {name: \"HTML\", value: \"HTML\"},\n  {name: \"Java\", value: \"Java\"},\n  {name: \"Shell\", value: \"Shell\"},\n  {name: \"C++\", value: \"C++\"},\n  {name: \"C#\", value: \"C#\"},\n  {name: \"C\", value: \"C\"},\n  {name: \"Jupyter Notebook\", value: \"Jupyter Notebook\"},\n  {name: \"CSS\", value: \"CSS\"},\n];","import React, {useState} from 'react';\nimport {search} from '../helpers/apiCalls';\nimport './Search.scss';\nimport {sortOptions, languages} from '../helpers/objects';\n\nfunction Search(props) {\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [sortValue, setSortValue] = useState(sortOptions[0].value);\n  const [sortOrder, setSortOrder] = useState(sortOptions[0].order);\n  const [languageValue, setLanguageValue] = useState(\"\");\n\n  function getSearchResults(event) {\n    event.preventDefault();\n    const searchParams = {\n      q: `${searchValue}${languageValue ? '+language:'+ languageValue : ''}`,\n      sort: sortValue,\n      order: sortOrder\n    };\n    search(searchParams)\n      .then(githubResults => {\n        props.onError(null);\n        props.onSubmit(githubResults.data.items)\n      }).catch(error => {\n        props.onSubmit(null);\n        props.onError(error.response.data.message);\n        console.error(error)\n      })\n  }\n\n  function handleSort(sort) {\n    const option = JSON.parse(sort)\n    setSortValue(option.value)\n    setSortOrder(option.order)\n  }\n\n  return (\n    <section className=\"search\">\n      <h1 className=\"main-logo\">RepoSearch</h1>\n      <h1 className=\"mobile-logo\">RS</h1>\n      <form onSubmit={getSearchResults}>\n        <section className=\"search-bar\">\n          <input \n            type=\"text\" \n            autoFocus\n            placeholder=\"Search\" \n            value={searchValue} \n            onChange={e => setSearchValue(e.target.value)}/>\n          <button type=\"submit\">Search</button>\n        </section>\n        <section className=\"search-settings\">\n          <div>\n            <label htmlFor=\"sort\">Sort</label>\n            <select name=\"sort\" id=\"sort\" onChange={e => handleSort(e.target.value)}>\n              {sortOptions.map(option => (\n                <option value={JSON.stringify(option)} key={option.name}>{option.name}</option>\n              ))}\n            </select>\n          </div>\n\n          <div>\n            <label htmlFor=\"language\">Languages</label>\n            <select name=\"language\" id=\"language\" onChange={e => setLanguageValue(e.target.value)}>\n              <option value=\"\">None</option>\n              {languages.map(option => (\n                <option value={option.value} key={option.value}>{option.name}</option>\n              ))}\n            </select>\n          </div>\n        </section>\n      </form>\n    </section>\n  )\n}\nexport default (Search);","\nimport './RepoListItem.scss';\nimport {DateTime} from 'luxon';\n\nfunction RepoListItem({repo, selectRepo}) {\n  let languages = (<div className=\"language\">No Language Listed</div>);\n\n  if(repo.language) {\n    languages = repo.language.split(\" \").map(language => (\n      <div className=\"language\" key={language}>{language}</div>\n    ))\n  }\n\n  return (\n    <div className=\"repo-list-item card\" onClick={() => selectRepo(repo)}>\n      <div className=\"header\">\n        <h3 className=\"name\">{repo.full_name}</h3>\n        <div>\n          <p className=\"stars\">{repo.stargazers_count} Stars</p>\n          <p className=\"date-updated\">Updated {DateTime.fromJSDate(new Date(repo.updated_at)).toRelative()}</p>\n        </div>\n      </div>\n\n      <div className=\"main\">\n        <p>{repo.description}</p>\n      </div>\n\n      <div className=\"footer\">\n        {languages}\n      </div>\n    </div>\n  )\n}\n\nexport default (RepoListItem);","\nimport {useHistory} from \"react-router-dom\";\nimport './RepoDetail.scss';\nimport {DateTime} from 'luxon';\n\n\nfunction RepoDetail({repo}) {\n  let history = useHistory();\n  let languages = (<div className=\"language\">No Language Listed</div>);\n  function goBack() {\n    history.push('/');\n  }\n  if(!repo) goBack();\n\n  if(repo && repo.language) {\n    languages = repo.language.split(\" \").map(language => (\n      <div className=\"language\" key={language}>{language}</div>\n    ))\n  }\n\n  return (\n    <div className=\"repo-detail\">\n\n      <button className=\"back\" onClick={goBack}>Back</button>\n\n    {\n      repo &&\n      <div className=\"repo card\">\n        <section className=\"header\">\n          <h3 className=\"name\">{repo.full_name}</h3>\n          <div>\n            <p className=\"stars\">{repo.stargazers_count} Stars</p>\n            <p className=\"date-updated\">\n              Updated {DateTime.fromJSDate(new Date(repo.updated_at)).toRelative()}\n            </p>\n          </div>\n        </section>\n        {languages}\n\n        <section>\n          <p>{repo.description}</p>\n        </section>\n      </div>\n\n    }\n    </div>\n  )\n}\n\nexport default RepoDetail;","\nimport './App.scss';\nimport React, {useState} from 'react';\nimport Search from './Search/Search';\nimport RepoListItem from './RepoListItem/RepoListItem';\nimport RepoDetail from './RepoDetail/RepoDetail';\nimport {\n  Switch,\n  Route,\n  useHistory,\n} from \"react-router-dom\";\n\nfunction App(props) {\n  let history = useHistory();\n  const [selectedRepo, setSelectedRepo] = useState();\n  const [searchResults, setSearchResults] = useState(undefined);\n  const [error, setError] = useState(null);\n  let reposToRender;\n\n  if(searchResults) {\n    reposToRender = searchResults.map(repo => (\n        <RepoListItem repo={repo} selectRepo={selectRepo} key={repo.id}></RepoListItem>\n      ))\n    }\n\n  function selectRepo(repo) {\n    setSelectedRepo(repo)\n    history.push(`/repo/${repo.id}`);\n  }\n\n  return (\n    <div className=\"App\">\n      <Switch>\n\n        <Route path=\"/repo\">\n          <RepoDetail repo={selectedRepo}></RepoDetail>\n        </Route>\n\n        <Route exact path=\"/\">\n          <Search \n            onSubmit={githubResults => setSearchResults(githubResults)} \n            onError={error => setError(error)}>\n          </Search>\n          <section className=\"message-wrapper\">\n            {error && \n              <div className=\"error\">\n                <h2>Error</h2>\n                <p>{error}</p>\n              </div>}\n\n            {searchResults === undefined && \n              <p className=\"message\">Try searching for GitHub repos!</p>}\n\n            {searchResults && searchResults.length === 0 && \n              <p className=\"message\">Sorry, no GitHub repos match your search. Try another!</p>}\n          </section>\n          {reposToRender}\n        </Route>\n\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename=\"/repo-search\">\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}